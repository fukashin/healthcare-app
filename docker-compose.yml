services:
  # database
  db:
    # image: postgres
    container_name: db
    build:
      context: ./backend
      dockerfile: Dockerfile.database
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # backend
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
      args:
        DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
        DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
        DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
        DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_HOST: ${POSTGRES_HOST}
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py createsuperuser --noinput &&
        python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"

  # frontend
  frontend:
    container_name: frontend
    build:
      context: ./frontend/react
      dockerfile: ../Dockerfile.frontend
    restart: always
    ports:
      - "3000:3000"
